{"ast":null,"code":"// Import necessary modules\nimport axios from 'axios';\nimport { createUrl, log } from '../utils/utils'; // Assuming you've already defined these in your code.\n\n// Define the function for profile retrieval\nexport async function fetchUserProfile(userId) {\n  const url = createUrl(`/user/react_user/${userId}`);\n  try {\n    const response = await axios.get(url);\n    log(\"Profile retrieval response: \" + JSON.stringify(response.data)); // Logging the response data\n\n    // Handle the response data here as needed.\n    // For example, you can set the user's profile state or perform other actions.\n\n    return response.data;\n  } catch (error) {\n    log(\"Error during profile retrieval: \" + error);\n    return null;\n  }\n}\n\n// Function for fetching booking history\n\n// Function for fetching booking history from the API\nexport async function fetchBookingHistoryFromAPI(userId) {\n  try {\n    const response = await axios.get(createUrl(`/user/react_user/Bookhistory/${userId}`)); // Use createUrl here\n    return response.data.data;\n  } catch (error) {\n    console.error(\"Error fetching booking history:\", error);\n    throw error;\n  }\n}\n\n// Function for canceling a booking\nexport async function cancelBooking(reservationId) {\n  try {\n    const response = await axios.delete(createUrl(`/room/${reservationId}`)); // Use createUrl here\n    return response.data;\n  } catch (error) {\n    console.error(\"Error canceling booking:\", error);\n    throw error;\n  }\n}\n\n// Function for fetching image\nexport async function fetchImage(imagePath) {\n  try {\n    const imageUrl = createUrl(`/${imagePath}`);\n    const response = await axios.get(imageUrl, {\n      responseType: 'arraybuffer'\n    });\n\n    // Assuming you are working with binary image data, you can return it as-is\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching image:\", error);\n    throw error;\n  }\n}\n\n// Function for booking a reservation\nexport async function bookReservation(userId, roomId, checkInDate, checkOutDate) {\n  const url = createUrl('/reservation/book_Reservation');\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  const reservationData = {\n    userId: parseInt(userId),\n    roomId: roomId,\n    checkInDate: checkInDate,\n    checkOutDate: checkOutDate\n  };\n  try {\n    const response = await axios.post(url, reservationData, {\n      headers\n    });\n    console.log('Response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error booking reservation:', error);\n    throw error;\n  }\n}\n\n// Function for fetching room data\nexport async function fetchRoomData(roomno) {\n  const url = createUrl(`/room/${roomno}`);\n  try {\n    const response = await axios.get(url);\n    return response.data.data;\n  } catch (error) {\n    console.error(\"Error fetching room data:\", error);\n    throw error;\n  }\n}\n\n// Function for fetching all rooms\nexport async function fetchAllRooms() {\n  const url = createUrl('/room/getAllRooms');\n  try {\n    const response = await axios.get(url);\n    return response.data.data;\n  } catch (error) {\n    console.error(\"Error fetching all rooms:\", error);\n    throw error;\n  }\n}\n\n// Function for fetching available rooms within a date range\nexport async function fetchAvailableRooms(checkInDate, checkOutDate) {\n  const url = createUrl(`/room/react_user/availability/${checkInDate}/${checkOutDate}`);\n  try {\n    const response = await axios.get(url);\n    return response.data.data;\n  } catch (error) {\n    console.error(\"Error fetching available rooms:\", error);\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","createUrl","log","fetchUserProfile","userId","url","response","get","JSON","stringify","data","error","fetchBookingHistoryFromAPI","console","cancelBooking","reservationId","delete","fetchImage","imagePath","imageUrl","responseType","bookReservation","roomId","checkInDate","checkOutDate","headers","reservationData","parseInt","post","fetchRoomData","roomno","fetchAllRooms","fetchAvailableRooms"],"sources":["D:/PROJECT/React final/resume_project_r_3_react-final/src/services/userSide.js"],"sourcesContent":["// Import necessary modules\nimport axios from 'axios';\nimport { createUrl, log } from '../utils/utils'; // Assuming you've already defined these in your code.\n\n// Define the function for profile retrieval\nexport async function fetchUserProfile(userId) {\n  const url = createUrl(`/user/react_user/${userId}`);\n\n  try \n  {\n    const response = await axios.get(url);\n    log(\"Profile retrieval response: \" + JSON.stringify(response.data)); // Logging the response data\n\n    // Handle the response data here as needed.\n    // For example, you can set the user's profile state or perform other actions.\n\n    return response.data;\n  } \n  \n  catch (error) \n  {\n    log(\"Error during profile retrieval: \" + error);\n    return null;\n  }\n}\n\n// Function for fetching booking history\n\n// Function for fetching booking history from the API\nexport async function fetchBookingHistoryFromAPI(userId) \n{\n  try \n  {\n    const response = await axios.get(createUrl(`/user/react_user/Bookhistory/${userId}`)); // Use createUrl here\n    return response.data.data;\n  } \n  catch (error) \n  {\n    console.error(\"Error fetching booking history:\", error);\n    throw error;\n  }\n}\n\n// Function for canceling a booking\nexport async function cancelBooking(reservationId) {\n  try {\n    const response = await axios.delete(createUrl(`/room/${reservationId}`)); // Use createUrl here\n    return response.data;\n  } catch (error) {\n    console.error(\"Error canceling booking:\", error);\n    throw error;\n  }\n}\n\n// Function for fetching image\nexport async function fetchImage(imagePath) {\n  try {\n    const imageUrl = createUrl(`/${imagePath}`);\n    const response = await axios.get(imageUrl, { responseType: 'arraybuffer' });\n\n    // Assuming you are working with binary image data, you can return it as-is\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching image:\", error);\n    throw error;\n  }\n}\n\n// Function for booking a reservation\nexport async function bookReservation(userId, roomId, checkInDate, checkOutDate) {\n  const url = createUrl('/reservation/book_Reservation');\n  const headers = {\n    'Content-Type': 'application/json',\n  };\n\n  const reservationData = {\n    userId: parseInt(userId),\n    roomId: roomId,\n    checkInDate: checkInDate,\n    checkOutDate: checkOutDate,\n  };\n\n  try {\n    const response = await axios.post(url, reservationData, { headers });\n    console.log('Response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error booking reservation:', error);\n    throw error;\n  }\n}\n\n// Function for fetching room data\nexport async function fetchRoomData(roomno) {\n  const url = createUrl(`/room/${roomno}`);\n\n  try {\n    const response = await axios.get(url);\n    return response.data.data;\n  } catch (error) {\n    console.error(\"Error fetching room data:\", error);\n    throw error;\n  }\n}\n\n// Function for fetching all rooms\nexport async function fetchAllRooms() {\n  const url = createUrl('/room/getAllRooms');\n\n  try {\n    const response = await axios.get(url);\n    return response.data.data;\n  } catch (error) {\n    console.error(\"Error fetching all rooms:\", error);\n    throw error;\n  }\n}\n\n// Function for fetching available rooms within a date range\nexport async function fetchAvailableRooms(checkInDate, checkOutDate) {\n  const url = createUrl(`/room/react_user/availability/${checkInDate}/${checkOutDate}`);\n\n  try {\n    const response = await axios.get(url);\n    return response.data.data;\n  } catch (error) {\n    console.error(\"Error fetching available rooms:\", error);\n    throw error;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}