{"ast":null,"code":"import axios from 'axios';\nimport { createUrl, log } from '../utils/utils';\nexport async function bookReservation(userId, roomId, checkInDate, checkOutDate) {\n  const url = createUrl('/reservation/book_Reservation');\n  const requestData = {\n    userId,\n    roomId,\n    checkInDate: checkInDate.toISOString().split('T')[0],\n    checkOutDate: checkOutDate.toISOString().split('T')[0]\n  };\n  try {\n    const response = await axios.post(url, requestData);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\nexport async function checkRoomAvailability(checkInDate, checkOutDate, roomType, capacity) {\n  const url = createUrl('/room/availability');\n  const requestData = {\n    checkInDate: checkInDate.toISOString().split('T')[0],\n    checkOutDate: checkOutDate.toISOString().split('T')[0],\n    roomType,\n    capacity: parseInt(capacity)\n  };\n  console.log(requestData);\n  try {\n    //debugger;\n    const response = await axios.post(url, requestData);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\nexport async function getBookingList() {\n  const url = createUrl('/reservation/bookings');\n  try {\n    // get the current user's token from session storage\n    const {\n      name\n    } = sessionStorage;\n\n    // create a header to send the token\n    const header = {\n      headers: {\n        name\n      }\n    };\n\n    // make the api call using the token in the header\n    const response = await axios.get(url, header);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\nexport async function getUnconfirmBookingList() {\n  const url = createUrl('/reservation/bookings_unconfirmed');\n  try {\n    // get the current user's token from session storage\n    const {\n      name\n    } = sessionStorage;\n\n    // create a header to send the token\n    const header = {\n      headers: {\n        name\n      }\n    };\n\n    // make the api call using the token in the header\n    const response = await axios.get(url, header);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\nexport async function confirmBooking(reservationId, amount, paymentDate) {\n  const url = createUrl('/confirmation/confirmations');\n  const data = {\n    reservationId,\n    amount,\n    paymentDate\n  };\n  try {\n    const response = await axios.post(url, data);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\nexport async function deleteReservation(reservationId) {\n  const url = createUrl(`/reservation/${reservationId}`);\n  try {\n    const response = await axios.delete(url);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}","map":{"version":3,"names":["axios","createUrl","log","bookReservation","userId","roomId","checkInDate","checkOutDate","url","requestData","toISOString","split","response","post","data","ex","checkRoomAvailability","roomType","capacity","parseInt","console","getBookingList","name","sessionStorage","header","headers","get","getUnconfirmBookingList","confirmBooking","reservationId","amount","paymentDate","deleteReservation","delete"],"sources":["D:/PROJECT/React final/resume_project_r_3_react-final/src/services/booking.js"],"sourcesContent":["import axios from 'axios'\nimport { createUrl, log } from '../utils/utils'\n\nexport async function bookReservation(userId, roomId, checkInDate, checkOutDate) {\n  const url = createUrl('/reservation/book_Reservation');\n\n  const requestData = {\n    userId,\n    roomId,\n    checkInDate: checkInDate.toISOString().split('T')[0],\n    checkOutDate: checkOutDate.toISOString().split('T')[0],\n  };\n\n  try {\n    const response = await axios.post(url, requestData);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\n\nexport async function checkRoomAvailability(checkInDate, checkOutDate, roomType, capacity) {\n  const url = createUrl('/room/availability');\n\n  const requestData = {\n    checkInDate: checkInDate.toISOString().split('T')[0],\n    checkOutDate: checkOutDate.toISOString().split('T')[0],\n    roomType,\n    capacity: parseInt(capacity),\n  };\nconsole.log(requestData)\n  try {\n    //debugger;\n    const response = await axios.post(url, requestData);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\n\nexport async function getBookingList() {\n  const url = createUrl('/reservation/bookings')\n\n  try {\n    // get the current user's token from session storage\n    const { name } = sessionStorage\n\n    // create a header to send the token\n    const header = {\n      headers: {\n        name,\n      },\n    }\n\n    // make the api call using the token in the header\n    const response = await axios.get(url, header)\n    log(response.data)\n    return response.data\n  } catch (ex) {\n    log(ex)\n    return null\n  }\n}\n\nexport async function getUnconfirmBookingList() {\n  const url = createUrl('/reservation/bookings_unconfirmed')\n\n  try {\n    // get the current user's token from session storage\n    const { name } = sessionStorage\n\n    // create a header to send the token\n    const header = {\n      headers: {\n        name,\n      },\n    }\n\n    // make the api call using the token in the header\n    const response = await axios.get(url, header)\n    log(response.data)\n    return response.data\n  } catch (ex) {\n    log(ex)\n    return null\n  }\n}\n\n\nexport async function confirmBooking( reservationId, amount, paymentDate) {\n  const url = createUrl('/confirmation/confirmations');\n  const data = {\n    reservationId,\n    amount,\n    paymentDate,\n  };\n\n  try {\n    const response = await axios.post(url, data);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\n\nexport async function deleteReservation(reservationId) {\n  const url = createUrl(`/reservation/${reservationId}`);\n  \n  try {\n    const response = await axios.delete(url);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}